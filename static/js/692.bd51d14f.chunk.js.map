{"version":3,"file":"static/js/692.bd51d14f.chunk.js","mappings":"iNACA,GAAgB,QAAU,yBAAyB,WAAa,4BAA4B,aAAe,8BAA8B,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,yBAAyB,WAAa,6B,mBCWnP,EATa,SAACA,GACV,OACI,UAAC,KAAD,CAASC,GAAI,YAAcD,EAAME,GAAIC,UAAWC,EAAAA,KAAY,IAAMA,EAAAA,KAAY,IAAMA,EAAAA,QAApF,WACI,gBAAKD,UAAWC,EAAAA,WAAiBC,IAAKL,EAAMM,OAAQC,IAAI,iBACxD,wBAAKP,EAAMQ,WCIvB,EATgB,SAACR,GACb,OACI,iBAAKG,UAAWC,EAAAA,KAAY,IAAMA,EAAAA,QAAlC,WACI,gBAAKD,UAAWC,EAAAA,WAAiBC,IAAKL,EAAMM,UAC5C,uBAAIN,EAAMS,c,uCC4BhBC,GAAcC,EAAAA,EAAAA,GAAiB,IAY/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,yBADkBD,EAVL,SAACb,GACpB,OACI,kBAAMe,SAAUf,EAAMgB,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOd,UAAWC,EAAAA,WAAiBc,UAAWC,EAAAA,EAAUX,KAAM,oBAAqBY,YAAY,YAAYC,SAAU,CAACC,EAAAA,EAAUZ,MAEhI,2CASZ,EA1CgB,SAACV,GAEb,IAAIuB,EAAevB,EAAMwB,YAAYC,UAAUC,KAAK,SAAAC,GAAK,OAAK,SAAC,EAAD,CAAMnB,KAAMmB,EAAMnB,KAAMF,OAAQqB,EAAMrB,OAAQJ,GAAIyB,EAAMzB,QAElH0B,EAAkB5B,EAAMwB,YAAYK,aAAaH,KAAK,SAAAI,GAAQ,OAAK,SAAC,EAAD,CAASrB,QAASqB,EAASrB,QAASH,OAAQwB,EAASxB,OAAQJ,GAAI4B,EAAS5B,QAMjJ,OACI,4BACI,sCACA,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKmB,KAEL,iBAAKpB,UAAWC,EAAAA,aAAhB,UACKwB,GACD,SAAChB,EAAD,CAAqBG,SAbjB,SAACgB,GACjB/B,EAAMgC,WAAWD,EAAOE,gCCKhC,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACC,GACnB,MAAO,CACHZ,YAAaY,EAAMZ,gBAGF,SAACa,GACtB,MAAO,CACHL,WAAY,SAACC,GACTI,GAASC,EAAAA,EAAAA,GAAwBL,SAOzCM,EAAAA,EAFJ,CAGEC","sources":["webpack://curs-react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/User/User.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__UAJUv\",\"avatar_img\":\"Dialogs_avatar_img__+twvr\",\"dialogs_item\":\"Dialogs_dialogs_item__1jjr8\",\"item\":\"Dialogs_item__vmSbO\",\"user\":\"Dialogs_user__oLhYt\",\"actives\":\"Dialogs_actives__QWs4q\",\"input_mess\":\"Dialogs_input_mess__rhjjp\"};","import cont from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <NavLink to={\"/dialogs/\" + props.id} className={cont.item + ' ' + cont.user + ' ' + cont.actives}>\r\n            <img className={cont.avatar_img} src={props.avatar} alt=\"avatar user\" />\r\n            <h6>{props.name}</h6>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default User;","import cont from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={cont.item + ' ' + cont.message}>\r\n            <img className={cont.avatar_img} src={props.avatar} />\r\n            <p>{props.message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import cont from './Dialogs.module.css';\r\nimport User from './User/User';\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsUsers = props.dialogsPage.usersData.map( users =>  <User name={users.name} avatar={users.avatar} id={users.id} />  );\r\n\r\n    let dialogsMessages = props.dialogsPage.messagesData.map( messages =>  <Message message={messages.message} avatar={messages.avatar} id={messages.id} />  );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageElement);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Messages</h4>\r\n            <div className={cont.dialogs}>\r\n                <div className={cont.dialogs_item}>\r\n                    {dialogsUsers}\r\n                </div>\r\n                <div className={cont.dialogs_item}>\r\n                    {dialogsMessages}\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength40 = maxLengthCreator(40);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={cont.input_mess} component={Textarea} name={'newMessageElement'} placeholder='Your news' validate={[required, maxLength40]} />\r\n            {/* <textarea onChange={onMessageChange} ref={newMessageElement} className={cont.input_mess} placeholder=\"Your news\"  value={props.dialogsPage.newMessageText} ></textarea> */}\r\n            <button>Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogsAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageElement) => {\r\n            dispatch(addMessageActionCreator(newMessageElement));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","to","id","className","cont","src","avatar","alt","name","message","maxLength40","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsUsers","dialogsPage","usersData","map","users","dialogsMessages","messagesData","messages","values","addMessage","newMessageElement","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}